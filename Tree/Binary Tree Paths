Given a binary tree, return all root-to-leaf paths.

For example, given the following binary tree:

   1
 /   \
2     3
 \
  5
All root-to-leaf paths are:

["1->2->5", "1->3"]

class Solution {
public:
    vector<string> binaryTreePaths(TreeNode* root) {
        if(!root) return{};
        vector<string> v;
      //  string s("");
        binaryTreePaths(v,to_string(root->val),root);
        return v;
    }
    void binaryTreePaths(vector<string> &v,string s,TreeNode *root){
        if(!root) return;
       // string s1=root->val+"";
      // if(s!="") s1=s+"->"+s1;
         if(!root->right&&!root->left) {v.push_back(s);return;}
       if(root->left) binaryTreePaths(v,s+"->"+to_string(root->left->val),root->left);
       if(root->right) binaryTreePaths(v,s+"->"+to_string(root->right->val),root->right);
      

    }
    
    
};
