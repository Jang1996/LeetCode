Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.Note: The solution set must not contain duplicate triplets.For example, given array S = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]
class Solution {public:    vector<vector<int>> threeSum(vector<int>& nums)
{       if(nums.size()<3) return{};         vector<vector<int>> v; set<vector<int>> s;       
sort(nums.begin(),nums.end());        
for(int i=0;i<nums.size();++i){            
int target=-nums[i];           
if(target<0) break  ;                           
int j=i+1,k=nums.size()-1;               
while(j<k){                    
if(nums[j]+nums[k]==target){                      
v.push_back({nums[i],nums[j],nums[k]});  
int v1=nums[j],v2=nums[k];                            
while(j<k&&nums[j]==v1) j++;while(j<k&&nums[k]==v2) k--;                
s.insert({nums[i],nums[j],nums[k]});                                      
}                    
if(nums[j]+nums[k]<target) ++j;                
if(nums[j]+nums[k]>target)  --k;           
}          
while(i+1<nums.size()&&nums[i]==nums[i+1]) i++;         
}                    
for(auto c:s) v.push_back(c);                    
return v;}
