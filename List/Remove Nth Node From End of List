Given a linked list, remove the nth node from the end of list and return its head.

For example,

   Given linked list: 1->2->3->4->5, and n = 2.

   After removing the second node from the end, the linked list becomes 1->2->3->5.
Note:
Given n will always be valid.
Try to do this in one pass.

```
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if(!head) return head;
        ListNode *pre=new ListNode (-1);
        pre->next=head;
        ListNode *p=pre,*q=pre;
        for(int i=0;i<n+1;++i)
            p=p->next;
        while(p){
            q=q->next;
            p=p->next;
        }
        q->next=q->next->next;
        return pre->next;
    }
    
};
```
