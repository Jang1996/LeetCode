Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.

For example,
Given 1->2->3->3->4->4->5, return 1->2->5.
Given 1->1->1->2->3, return 2->3.

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(!head) return NULL;
        ListNode *pre=new ListNode(-1),*p,*q;
        pre->next=head;
        p=pre;
        while(p->next){
            q=p->next;
            while(q->next&&q->val==q->next->val)
                    q=q->next;
            if(q!=p->next){
                p->next=q->next;
            }
            else p=p->next;
        }
        return pre->next;
    }
};
